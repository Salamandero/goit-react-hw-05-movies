{"version":3,"file":"static/js/293.8b2b7130.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/MovieSearch/MovieSearch.jsx","hooks/useDebounce.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  color: black;\n  text-decoration: none;\n`;\n\nexport const Item = styled.li`\n  a {\n    color: black;\n    text-decoration: none;\n  }\n  a:hover {\n    color: #ad00b5;\n    font-weight: 700;\n    text-decoration: none;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { List, Item } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(({ id, title, name }) => (\n          <Item key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title ?? name}\n            </Link>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n};\nexport default MovieList;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useDebounce } from '../../hooks/useDebounce';\n// import toast from 'react-hot-toast';\nimport PropTypes from 'prop-types';\n\nconst DEBOUNCE_TIME = 250;\n\nconst MovieSearch = ({ query }) => {\n  // , onSearch\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState(query);\n  const debounceSearchQuery = useDebounce(searchQuery, DEBOUNCE_TIME);\n\n  useEffect(() => {\n    if (!debounceSearchQuery) {\n      searchParams.delete('query');\n      setSearchParams(searchParams);\n      return;\n    }\n    setSearchParams({ query: debounceSearchQuery });\n  }, [setSearchParams, searchParams, debounceSearchQuery]);\n\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n\n  //   if (searchQuery.trim() || query.trim() === '') {\n  //     return toast.error('Write search movie');\n  //   }\n  //   onSearch(searchQuery);\n  //   setSearchQuery('');\n  // };\n  console.log(query);\n  return (\n    <>\n      <form\n      // onSubmit={handleSubmit}\n      >\n        <input\n          type=\"text\"\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.currentTarget.value)}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Write movie\"\n        />\n      </form>\n    </>\n  );\n};\n\nMovieSearch.propTypes = {\n  query: PropTypes.string.isRequired,\n};\nexport default MovieSearch;\n","import { useState, useEffect, useRef } from 'react';\n\nexport const useDebounce = (query, debounceTime) => {\n  const [debounceQuery, setDebounceQuery] = useState(query);\n  const timeoutRef = useRef(null);\n\n  useEffect(() => {\n    timeoutRef.current = setTimeout(() => {\n      setDebounceQuery(query);\n    }, debounceTime);\n\n    return () => {\n      clearTimeout(timeoutRef.current);\n    };\n  }, [query, debounceTime]);\n  return debounceQuery;\n};\n","import styled from 'styled-components';\n\nexport const NoFoundInfo = styled.h4`\n  display: block;\n  color: #ad00b5;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchDBMoviesSearch } from '../../services/api';\nimport MovieSearch from '../../components/MovieSearch/MovieSearch';\nimport { NoFoundInfo } from './Movies.styled';\n\nimport Loader from 'components/Loader/Loader';\nimport MovieList from '../../components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [searchParams] = useSearchParams();\n  // setSearchParams;\n  const [movies, setMovies] = useState([]);\n  const query = searchParams.get('query') ?? '';\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    async function getSearchMovies() {\n      try {\n        setIsLoading(true);\n        const movies = await fetchDBMoviesSearch(query);\n        const arrMovies = movies.map(({ id, name, title }) => ({\n          id,\n          name,\n          title,\n        }));\n        setMovies(arrMovies);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getSearchMovies();\n  }, [query]);\n\n  // const onSubmit = value => {\n  //   setSearchParams({ query: `${value}` });\n  // };\n  const proofMoviesList = () => {\n    if (movies.length === 0 && query) {\n      return true;\n    }\n    return false;\n  };\n  return (\n    <>\n      <MovieSearch\n        query={query}\n        // onSearch={onSubmit}\n      />\n      {isLoading && <Loader />}\n\n      {proofMoviesList() && <NoFoundInfo>Not found movie</NoFoundInfo>}\n\n      {movies && <MovieList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a147bcd1e0cbe82e9bf9de24930f8c06';\n\n//Trends\nexport async function fetchDBMoviesTrend() {\n  const res = await axios.get(`/trending/all/week`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return res.data.results;\n}\n\n//SearchQuery\nexport async function fetchDBMoviesSearch(query) {\n  const res = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: query,\n      page: 1,\n    },\n  });\n  return res.data.results;\n}\n\n//запит повної інформації про фільм для сторінки кінофільму.\nexport async function fetchDBMoviesInfo(movieId) {\n  const res = await axios.get(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return res.data;\n}\n//запит інформації про акторський склад для сторінки кінофільму.\nexport async function fetchDBMoviesInfoCast(movie_id) {\n  const res = await axios.get(`/movie/${movie_id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return res.data.cast;\n}\n// запит оглядів для сторінки кінофільму.\nexport async function fetchDBMoviesInfoReviews(movie_id) {\n  const res = await axios.get(`/movie/${movie_id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return res.data.results;\n}\n"],"names":["List","styled","Item","movies","location","useLocation","map","id","title","name","to","state","from","query","useSearchParams","searchParams","setSearchParams","useState","searchQuery","setSearchQuery","debounceSearchQuery","debounceTime","debounceQuery","setDebounceQuery","timeoutRef","useRef","useEffect","current","setTimeout","clearTimeout","useDebounce","delete","console","log","type","value","onChange","e","currentTarget","autoComplete","autoFocus","placeholder","NoFoundInfo","setMovies","get","isLoading","setIsLoading","fetchDBMoviesSearch","arrMovies","getSearchMovies","Loader","length","MovieList","axios","API_KEY","fetchDBMoviesTrend","params","api_key","res","data","results","page","fetchDBMoviesInfo","movieId","fetchDBMoviesInfoCast","movie_id","cast","fetchDBMoviesInfoReviews"],"sourceRoot":""}
{"version":3,"file":"static/js/33.bc2159fe.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ImgFilm = styled.img`\n  width: 250px;\n  display: flex;\n  margin: 0 auto;\n`;\n\nexport const BackLink = styled(Link)`\n  display: inline-block;\n  color: #fff;\n  text-decoration: none;\n  border-radius: 4px;\n  padding: 4px;\n  background-color: #ad00b5;\n  margin-bottom: 8px;\n`;\nexport const WrapperFilm = styled.div`\n  display: grid;\n  grid-template-columns: 260px 1fr;\n  padding-bottom: 10px;\n  border-bottom: 1px solid black;\n`;\nexport const HeadText = styled.h3`\n  margin-top: 16px;\n`;\nexport const AddInfo = styled.h3`\n  margin-top: 16px;\n`;\nexport const AddInfoWrapper = styled.div`\n  padding-bottom: 8px;\n  border-bottom: 1px solid black;\n`;\nexport const AddInfoLink = styled(Link)`\n  color: #ad00b5;\n  font-weight: 500;\n`;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchDBMoviesInfo } from 'services/api';\nimport { Suspense } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport noImg from '../../images/no_img.jpg';\nimport {\n  ImgFilm,\n  WrapperFilm,\n  BackLink,\n  HeadText,\n  AddInfo,\n  AddInfoWrapper,\n  AddInfoLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDet, setMovieDet] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchDBMoviesInfo(Number(movieId))\n      .then(setMovieDet)\n      .catch(error => {\n        setError(\n          'Our Minions have hands on other side and can`t find information about this film'\n        );\n        console.log(error);\n      })\n      .finally(setIsLoading(false));\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [movieId]);\n  if (!movieDet) {\n    return null;\n  }\n\n  const average = Math.round(Number(movieDet?.vote_average) * 10);\n  const date = movieDet.release_date?.slice(0, 4);\n  const genresList = movieDet.genres?.map(genre => genre.name).join(', ');\n\n  return (\n    <>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      {isLoading && <Loader />}\n      {error && <p>{error} </p>}\n\n      {!error && movieDet && (\n        <div>\n          <WrapperFilm>\n            <ImgFilm\n              src={\n                movieDet.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movieDet.poster_path}`\n                  : noImg\n              }\n              alt={movieDet.title}\n              loading=\"lazy\"\n            />\n            <div>\n              <h2>\n                {movieDet.title} ({date})\n              </h2>\n              <p>User score: {average}%</p>\n              <HeadText>Overview</HeadText>\n              <p>{movieDet.overview}</p>\n              <HeadText>Genres</HeadText>\n              <p>{genresList}</p>\n            </div>\n          </WrapperFilm>\n          <AddInfoWrapper>\n            <AddInfo>Additional information</AddInfo>\n            <ul>\n              <li>\n                <AddInfoLink to=\"cast\" state={{ from: backLink }}>\n                  Cast\n                </AddInfoLink>\n              </li>\n              <li>\n                <AddInfoLink to=\"reviews\" state={{ from: backLink }}>\n                  Reviews\n                </AddInfoLink>\n              </li>\n            </ul>\n            <Suspense fallback={<Loader />}>\n              <Outlet />\n            </Suspense>\n          </AddInfoWrapper>\n        </div>\n      )}\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a147bcd1e0cbe82e9bf9de24930f8c06';\n\n//Trends\nexport async function fetchDBMoviesTrend() {\n  const res = await axios.get(`/trending/all/week`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return res.data.results;\n}\n\n//SearchQuery\nexport async function fetchDBMoviesSearch(query) {\n  const res = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: query,\n      page: 1,\n    },\n  });\n  return res.data.results;\n}\n\n//запит повної інформації про фільм для сторінки кінофільму.\nexport async function fetchDBMoviesInfo(movieId) {\n  const res = await axios.get(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return res.data;\n}\n//запит інформації про акторський склад для сторінки кінофільму.\nexport async function fetchDBMoviesInfoCast(movie_id) {\n  const res = await axios.get(`/movie/${movie_id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return res.data.cast;\n}\n// запит оглядів для сторінки кінофільму.\nexport async function fetchDBMoviesInfoReviews(movie_id) {\n  const res = await axios.get(`/movie/${movie_id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return res.data.results;\n}\n"],"names":["ImgFilm","styled","BackLink","Link","WrapperFilm","HeadText","AddInfo","AddInfoWrapper","AddInfoLink","movieId","useParams","useState","movieDet","setMovieDet","isLoading","setIsLoading","error","setError","location","useLocation","backLinkHref","state","from","backLink","useEffect","fetchDBMoviesInfo","Number","then","catch","console","log","finally","average","Math","round","vote_average","date","release_date","slice","genresList","genres","map","genre","name","join","to","Loader","src","poster_path","noImg","alt","title","loading","overview","Suspense","fallback","axios","API_KEY","fetchDBMoviesTrend","params","api_key","res","data","results","fetchDBMoviesSearch","query","page","fetchDBMoviesInfoCast","movie_id","cast","fetchDBMoviesInfoReviews"],"sourceRoot":""}
{"version":3,"file":"static/js/828.4b68f6f0.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/MovieSearch/MovieSearch.styled.js","components/MovieSearch/MovieSearch.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  color: black;\n  text-decoration: none;\n`;\n\nexport const Item = styled.li`\n  a {\n    color: black;\n    text-decoration: none;\n  }\n  a:hover {\n    color: #ad00b5;\n    font-weight: 700;\n    text-decoration: none;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { List, Item } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(({ id, title, name }) => (\n          <Item key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title ?? name}\n            </Link>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n};\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const BtnSubmit = styled.button`\n  color: #fff;\n  font-weight: 700;\n  background-color: #ad00b5;\n`;\n","import { useState } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { useDebounce } from '../../hooks/useDebounce';\nimport toast from 'react-hot-toast';\nimport PropTypes from 'prop-types';\nimport { BtnSubmit } from './MovieSearch.styled';\n\n// const DEBOUNCE_TIME = 250;\n\nconst MovieSearch = ({ query, onSearch }) => {\n  // const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState(query);\n  // const debounceSearchQuery = useDebounce(searchQuery, DEBOUNCE_TIME);\n\n  // useEffect(() => {\n  // if (!debounceSearchQuery) {\n  //   searchParams.delete('query');\n  //   setSearchParams(searchParams);\n  //   return;\n  // }\n  //   setSearchParams(query);\n  // }, [searchParams]);\n\n  // useEffect(() => {\n  //   if (!debounceSearchQuery) {\n  //     searchParams.delete('query');\n  //     setSearchParams(searchParams);\n  //     return;\n  //   }\n  //   setSearchParams({ query: debounceSearchQuery });\n  // }, [setSearchParams, searchParams, debounceSearchQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      return toast.error('Write search movie');\n    }\n    onSearch(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.currentTarget.value)}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Write movie\"\n        />\n        <BtnSubmit type=\"submit\">Search</BtnSubmit>\n      </form>\n    </>\n  );\n};\n\nMovieSearch.propTypes = {\n  query: PropTypes.string.isRequired,\n  onSearch: PropTypes.func.isRequired,\n};\nexport default MovieSearch;\n","import styled from 'styled-components';\n\nexport const NoFoundInfo = styled.h4`\n  display: block;\n  color: #ad00b5;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchDBMoviesSearch } from '../../services/api';\nimport MovieSearch from '../../components/MovieSearch/MovieSearch';\nimport { NoFoundInfo } from './Movies.styled';\n\nimport Loader from 'components/Loader/Loader';\nimport MovieList from '../../components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const query = searchParams.get('query') ?? '';\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    async function getSearchMovies() {\n      try {\n        setIsLoading(true);\n        const movies = await fetchDBMoviesSearch(query);\n        const arrMovies = movies.map(({ id, name, title }) => ({\n          id,\n          name,\n          title,\n        }));\n        setMovies(arrMovies);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getSearchMovies();\n  }, [query]);\n\n  const onSubmit = value => {\n    setSearchParams({ query: `${value}` });\n  };\n  const proofMoviesList = () => {\n    if (movies.length === 0 && query) {\n      return true;\n    }\n    return false;\n  };\n  return (\n    <>\n      <MovieSearch query={query} onSearch={onSubmit} />\n      {isLoading && <Loader />}\n\n      {proofMoviesList() && <NoFoundInfo>Not found movie</NoFoundInfo>}\n\n      {movies && <MovieList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a147bcd1e0cbe82e9bf9de24930f8c06';\n\n//Trends\nexport async function fetchDBMoviesTrend() {\n  const res = await axios.get(`/trending/all/week`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return res.data.results;\n}\n\n//SearchQuery\nexport async function fetchDBMoviesSearch(query) {\n  const res = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: query,\n      page: 1,\n    },\n  });\n  return res.data.results;\n}\n\n//запит повної інформації про фільм для сторінки кінофільму.\nexport async function fetchDBMoviesInfo(movieId) {\n  const res = await axios.get(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return res.data;\n}\n//запит інформації про акторський склад для сторінки кінофільму.\nexport async function fetchDBMoviesInfoCast(movie_id) {\n  const res = await axios.get(`/movie/${movie_id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return res.data.cast;\n}\n// запит оглядів для сторінки кінофільму.\nexport async function fetchDBMoviesInfoReviews(movie_id) {\n  const res = await axios.get(`/movie/${movie_id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return res.data.results;\n}\n"],"names":["List","styled","Item","movies","location","useLocation","map","id","title","name","to","state","from","BtnSubmit","query","onSearch","useState","searchQuery","setSearchQuery","onSubmit","e","preventDefault","trim","toast","type","value","onChange","currentTarget","autoComplete","autoFocus","placeholder","NoFoundInfo","useSearchParams","searchParams","setSearchParams","setMovies","get","isLoading","setIsLoading","useEffect","fetchDBMoviesSearch","arrMovies","console","log","getSearchMovies","Loader","length","MovieList","axios","API_KEY","fetchDBMoviesTrend","params","api_key","res","data","results","page","fetchDBMoviesInfo","movieId","fetchDBMoviesInfoCast","movie_id","cast","fetchDBMoviesInfoReviews"],"sourceRoot":""}